#!/bin/bash

USAGE="`basename $0`-y -p -v -h [PATH]"

ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_BLUE=$ESC_SEQ"34;01m"
COL_MAGENTA=$ESC_SEQ"35;01m"
COL_CYAN=$ESC_SEQ"36;01m"

# check dependacies
if [ ! `which where_am_i` ]
then
    echo "Unable to locate where_am_i.  Have you checked out and built echo where_am_i.c."
    echo "It's part of the neontribe shell tools package."
    exit 1
fi

function help
{
    echo $USAGE
        cat <<EOF

        Uses svn to search the [PATH] specified using 'svn staus' and adds new
        files, dels removed files.  If the path is ommited then it acts on the
        current directory.

        -p  Pretend.  Just echo which svn add/del commands would be run
        -v  Verbose.  Report what you are doing.
        -y  Confirm.  Default behaviour is to ask for confirmation to proceed
                      before executing the svn commands.  The -y flag allows 
                      the script to proceed without interaction.
EOF
    exit 1
}

function message
{
    if [ "$VERBOSE" -eq "1" ]
    then
        echo $@
    fi
}

function command
{
    if [ "$PRETEND" -eq "1" ]
    then
        echo $@
    else
        exec $@
    fi
}

PRETEND=0
VERBOSE=0
CONFIRM=1

while getopts "vph" options; do
    case $options in
        v)  VERBOSE=1;;
        p)  PRETEND=1;;
        y)  CONFIRM=0;;
        h)  help;;
    esac
done
shift $((OPTIND-1))

if [ ! -z $1 ]
then
    _PATH=$1
else
    _PATH=`where_am_i $0`
fi

message "PRETEND=$PRETEND"
message "VERBOSE=$VERBOSE"

message "Executing svn status on $_PATH"
TEMP_FILE=`mktemp`
echo $TEMP_FILE
exec svn status $_PATH > $TEMP_FILE
cat $TEMP_FILE
while read line; do
  echo $line . "\n";
done < $TEMP_FILE











# rm $TEMP_FILE
