#!/bin/bash

# TODO Dump both dbs as single line inserts and diff them

set -e

source `dirname $0`/colours
NO_ARGS=0
VERBOSE=off
USAGE="$0 [-v] [-h] [-r remote-drupal-root] [-l local-drupal-root] [[-b <major|minor|bump>] | [-f release]] [-m mysql-root-pass] remoteuser remotehost"

if [ $# -eq "$NO_ARGS" ]; then
    echo $USAGE
    exit 1
fi

# Set defaults
DRUPAL_LOCAL_ROOT=`pwd`

source `dirname $0`/drupal-functions

function usage {
    echo $USAGE
    cat <<EOF

Take a local drupal install and publish it to a remote site.  It wll create a
DB and copy the 'live' site into it. This script needs to have an existing site
in place to operate on and that site must have a functional drush alias. The 
files from the local site will be pushed up to the live site and the current
live site databse will be copied into the new drupal.

Manadtory Parameters
--------------------
remoteuser
  This user MUST have passwordless key based authentication to the remote 
  server. An ssh-agent can be used but the process should be non-interactive
remotehost
  The host to publish the site to.

Optional Parameters
-------------------
-v
  Be verbose
-h
  Print this message
-r remote-drupal-root
  The path to the root of the current drupal root. It is the DB from this
  instance that will be installed into the new release. Defaults to:
  /var/www/latest
-b <major|minor|bump>]
  Sites are release in a x.y.z format where versions are major.minor.patch
  The script will bump that version by one in the category specified. If
  ommitted the script will ask.
-f release
  If specified this release value will override the m.m.p number
-m mysql-root-pass
  The script expects to find the remote mysql root password in an environment
  variable MYSQL_ROOT_PASSWORD. This parameter can override that.
EOF
}

# End functions
###############################

# OPTS=`getopt -o v -r drupal_remote_root -l drupal_local_root -b bumpup -f force-version: -- "$@"`

while getopts "r:l:b:f:m:vh" options; do
    case $options in
        v) VERBOSE='verbose';;
        h) usage; exit 0;;
        r) DRUPAL_REMOTE_ROOT="$OPTARG";;
        l) DRUPAL_LOCAL_ROOT="$OPTARG";;
        b) BUMP="$OPTARG";;
        f) RELEASE="$OPTARG";;
        m) MYSQL_ROOT_PASSWORD="$OPTARG";; 
    esac
done

shift $((OPTIND-1))
RUSER=$1
RHOST=$2

# check the most common write permission
if [ ! -w "$DRUPAL_LOCAL_ROOT" ] ; then
    echo -e $COL_RED"Cannot write to ${DRUPAL_LOCAL_ROOT}. Writting change log will fail."$COL_RESET
    echo -e $COL_CYAN"chown $USER:`id -gn $USER` ${DRUPAL_LOCAL_ROOT}"$COL_RESET
    echo -e $COL_CYAN"chown $USER:`id -gn $USER` ${DRUPAL_LOCAL_ROOT}/changelog.txt"$COL_RESET
    exit 1
fi

if [ ! -w "$DRUPAL_LOCAL_ROOT/sites/all/drush" ] ; then
    echo -e $COL_RED"Cannot write to ${DRUPAL_LOCAL_ROOT}/sites/all/drush. Writting alias file log will fail."$COL_RESET
    echo -e $COL_CYAN"chown $USER:`id -gn $USER` ${DRUPAL_LOCAL_ROOT}/sites/all/drush"$COL_RESET
    exit 1
fi

if [ ! -w "$DRUPAL_LOCAL_ROOT/sites/default" ] ; then
    echo -e $COL_RED"Cannot write to ${DRUPAL_LOCAL_ROOT}/sites/default Writting new settings file log will fail."$COL_RESET
    echo -e $COL_CYAN"chown $USER:`id -gn $USER` ${DRUPAL_LOCAL_ROOT}/sites/default"$COL_RESET
    exit 1
fi

# Check we have required params
if [ -z $RUSER ]; then
    echo -e $COL_RED"Missing remote user"$COL_RESET
    echo $USAGE
    exit 1
elif [ -z $RHOST ]; then
    echo -e $COL_RED"Missing remote host"$COL_RESET
    echo $USAGE
    exit 1
elif [ -z "$DRUPAL_LOCAL_ROOT" ] || [ ! -f "$DRUPAL_LOCAL_ROOT/cron.php" ]; then
    echo -e $COL_RED"The local drupal root ($DRUPAL_LOCAL_ROOT) does not seem to be a drupal site"$COL_RESET
    exit 1
fi

if [ -z "$DRUPAL_REMOTE_ROOT" ]; then
    ssh $RUSER@$RHOST ls -d /var/www/latest
    if [ "$?" == 0 ]; then
        DRUPAL_REMOTE_ROOT=/var/www/latest
    else
        ssh $RUSER@$RHOST ls -d /var/www/testing
        if [ "$?" == 0 ]; then
            DRUPAL_REMOTE_ROOT=/var/www/testing
        fi
    fi
fi

if [ -z "$DRUPAL_REMOTE_ROOT" ]; then 
    echo -e $COL_RED"Cannot locate remote drupal root"$COL_RESET
    exit 1
fi

getRemotePath $DRUPAL_REMOTE_ROOT
getVersionElements $CURRENT
RBASE=`dirname $RPATH`

CURRENT_ALIAS=$(aliasname $RHOST)

# If we don't have a alias file in the current site we can't proceed
set +e # turn off exit on error here
RALIAS=$RPATH/sites/all/drush/$CURRENT.$CURRENT_ALIAS.alias.drushrc.php
ssh $RUSER@$RHOST ls $RALIAS > /dev/null
if [ "$?" != '0' ]; then
    echo -e $COL_RED"Cannot find alias file for remote site\n  ssh $RUSER@$RHOST ls $RALIAS"$COL_RESET
fi
set -e

bumpUp $MAJOR_VERSION $MINOR_VERSION $PATCH_VERSION $BUMP

# Quick sanity check
if [ "$BRAND" != `basename $DRUPAL_LOCAL_ROOT` ]; then
    echo -e $COL_YELLOW"Brand code from remote ($BRAND) != Sniffed BC from $DRUPAL_LOCAL_ROOT"$COL_RESET
fi

touch $DRUPAL_LOCAL_ROOT/changelog.txt
echo "+----- $RELEASE -----+" > $DRUPAL_LOCAL_ROOT/changelog.new
date +"%y-%m-%d_%H-%M" >> $DRUPAL_LOCAL_ROOT/changelog.new
branches -l -p $DRUPAL_LOCAL_ROOT >> $DRUPAL_LOCAL_ROOT/changelog.new
if [ "$?" != 0 ]; then
    echo $COL_RED"Git branches are out of sync: 'branches -l -p $DRUPAL_LOCAL_ROOT'"$COL_RESET
fi
echo -e "\n" >> $DRUPAL_LOCAL_ROOT/changelog.new
cat $DRUPAL_LOCAL_ROOT/changelog.txt >> $DRUPAL_LOCAL_ROOT/changelog.new
mv $DRUPAL_LOCAL_ROOT/changelog.new $DRUPAL_LOCAL_ROOT/changelog.txt

RELEASE_ALIAS=$(aliasname $RHOST)
ALIAS_FILE=$DRUPAL_LOCAL_ROOT/sites/all/drush/$RELEASE.$RELEASE_ALIAS.alias.drushrc.php
echo "Local alias file: $ALIAS_FILE"

echo '<?php' > $ALIAS_FILE
drush -r $DRUPAL_LOCAL_ROOT sa --full --with-db @self >> $ALIAS_FILE
sed -i "s/'root' => .*/'root' => '\/var\/www\/$RELEASE',/g" $ALIAS_FILE
sed -i "s/self/${RELEASE}.${RELEASE_ALIAS}/g" $ALIAS_FILE
sed -i "/#name/a  'remote-host' => '${RHOST}'," $ALIAS_FILE
sed -i "/#name/a  'remote-user' => '${RUSER}'," $ALIAS_FILE
sed -i "s/        'database' => .*/      'database' => '$RELEASE',/g" $ALIAS_FILE
sed -i "s/        'username' => .*/      'username' => '$RELEASE',/g" $ALIAS_FILE
sed -i "s/        'password' => .*/      'password' => '$RELEASE',/g" $ALIAS_FILE

debug "+-------------------------------------------------+"
debug "${COL_BLUE}Remote user${COL_RESET}         $RUSER"
debug "${COL_BLUE}Remote host${COL_RESET}         $RHOST"
debug "${COL_BLUE}remote path${COL_RESET}         $RPATH"
debug "${COL_BLUE}local path${COL_RESET}          $DRUPAL_LOCAL_ROOT"
debug "${COL_BLUE}current${COL_RESET}             $CURRENT"
debug "${COL_BLUE}version from remote${COL_RESET} $BRAND / $MAJOR_VERSION / $MINOR_VERSION / $PATCH_VERSION"
debug "${COL_BLUE}version passed${COL_RESET}      $RELEASE"
debug "${COL_BLUE}bump${COL_RESET}                $BUMP"
debug "${COL_BLUE}aliasfile${COL_RESET}           $ALIAS_FILE"
debug "${COL_BLUE}Mysql root pass${COL_RESET}     $MYSQL_ROOT_PASSWORD"
debug "${COL_BLUE}Alias file${COL_RESET}          $RELEASE_ALIAS"
debug "+-------------------------------------------------+"

cat <<EOF
This command will now push the local site at:
  ${DRUPAL_LOCAL_ROOT} to ${RHOST}:/var/www/${RELEASE}
We will create a database on ${RHOST}
  mysql-create-user-and-db -u $RELEASE -p $RELEASE
Can sync the databse from:
  ${RHOST}:/var/www/${CURRENT} to ${RHOST}:/var/www/${RELEASE}

Proceed (y/N)?
EOF

read a
if [ "$a" != 'y' ] && [ "$a" != 'Y' ]; then
    echo Aborting
    exit 0
fi

echo -e $COL_GREEN"Prepare ${RELEASE}_settings.php for release"$COL_RESET
LOCAL_SETTINGS=$DRUPAL_LOCAL_ROOT/sites/default/settings.php
TMP_SETTINGS=$DRUPAL_LOCAL_ROOT/sites/default/${RELEASE}_settings.php
cp $LOCAL_SETTINGS $TMP_SETTINGS
sed -i "s/      'database' => .*/      'database' => '$RELEASE',/g" $TMP_SETTINGS
sed -i "s/      'username' => .*/      'username' => '$RELEASE',/g" $TMP_SETTINGS
sed -i "s/      'password' => .*/      'password' => '$RELEASE',/g" $TMP_SETTINGS

echo -e $COL_GREEN"Pre-syncing /var/www/${CURRENT} up to /var/www/${RELEASE}"$COL_RESET
ssh ${RUSER}@${RHOST} "mkdir -p /var/www/${RELEASE} && rsync -a -O --no-p --no-o /var/www/${CURRENT}/ /var/www/${RELEASE}/"

echo -e $COL_GREEN"Sync $DRUPAL_LOCAL_ROOT/* up to ${RUSER}@${RHOST}:/var/www/${RELEASE}"$COL_RESET
set +e
rsync -a $DRUPAL_LOCAL_ROOT/* ${RUSER}@${RHOST}:/var/www/${RELEASE}
if [ "$?" != "0" ]; then
    echo -e $COL_RED"There where errors syncing files, check output above"$COL_RESET
    exit 1
fi
ssh ${RUSER}@${RHOST} "rsync -a -O --no-p --no-o /var/www/${CURRENT}/sites/default/files /var/www/${RELEASE}/sites/default"
set -e

echo -e $COL_GREEN"Fixing permissions"$COL_RESET
ssh ${RUSER}@${RHOST} "find /var/www/$RELEASE -type d -exec chmod 2775 {} \;"
ssh ${RUSER}@${RHOST} "find /var/www/$RELEASE -type f -exec chmod 2664 {} \;"

echo -e $COL_GREEN"chmod run, I shouldn't have rights to change ownership you may need to run:"$COL_RESET
echo -e $COL_YELLOW"  sudo chown -R www-data:www-data /var/www/$RELEASE/sites/*/files"$COL_RESET

REMOTE_SETTINGS=/var/www/$RELEASE/sites/default/settings.php
scp $TMP_SETTINGS ${RUSER}@${RHOST}:$REMOTE_SETTINGS
ssh ${RUSER}@${RHOST} chmod a-w /var/www/$RELEASE/sites/default/settings.php /var/www/$RELEASE/sites/*

echo -e $COL_GREEN"Dumping remote DB"$COL_RESET
ssh ${RUSER}@${RHOST} drush -r /var/www/$CURRENT sql-dump --result-file=/tmp/dump.sql

echo -e $COL_GREEN"Diffing DBs to $DRUPAL_LOCAL_ROOT/${CURRENT}-${RELEASE}.diff"$COL_RESET
ssh ${RUSER}@${RHOST} drush -r /var/www/$CURRENT sql-dump --ordered-dump > /tmp/${CURRENT}.sql
drush -r $DRUPAL_LOCAL_ROOT sql-dump --ordered-dump > /tmp/${RELEASE}.sql
diff /tmp/${CURRENT}.sql /tmp/${RELEASE}.sql > $DRUPAL_LOCAL_ROOT/${CURRENT}-${RELEASE}.diff

echo -e $COL_GREEN"Creating remote DB"$COL_RESET
set +e
ssh ${RUSER}@${RHOST} "bash mysql-create-user-and-db -u $RELEASE -p $RELEASE -m $MYSQL_ROOT_PASSWORD"
set -e
if [ "$?" != "0" ]; then
    SQL_FILE=/var/tmp/`date +"%y-%m-%d_%H-%M"`.sql
    echo -e $COL_GREEN"Saving existiung dump to $SQL_FILE"$COL_RESET
    cp /tmp/dump.sql $SQL_FILE
fi

echo -e $COL_GREEN"Importing remote DB"$COL_RESET
ssh ${RUSER}@${RHOST} "drush -r /var/www/$RELEASE sql-cli < /tmp/dump.sql"
ssh ${RUSER}@${RHOST} rm /tmp/dump.sql

echo -e $COL_GREEN"Compiling SASS"$COL_RESET
ssh ${RUSER}@${RHOST} "for x in `ls -d /var/www/$RELEASE/sites/all/themes/*theme`; do compass compile $x; done"

echo -e $COL_GREEN"Running drush up"$COL_RESET
drush -r $DRUPAL_LOCAL_ROOT -y @$RELEASE.$RELEASE_ALIAS up

echo -e $COL_GREEN"Running drush updb"$COL_RESET
drush -r $DRUPAL_LOCAL_ROOT -y @$RELEASE.$RELEASE_ALIAS updb

echo -e $COL_GREEN"Clear caches"$COL_RESET
drush -r $DRUPAL_LOCAL_ROOT @$RELEASE.$RELEASE_ALIAS cc all

echo -e $COL_GREEN"Done. You may now need to create/delete symlinks to actaully send it live"$COL_RESET
