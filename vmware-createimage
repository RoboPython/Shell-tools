#!/bin/bash

VMWAREROOT="/var/lib/vmware/VirtualMachines"
VMBASELINE="BaseLine-UbuntuServer-8.04.1LTS"

USAGE="$0 [-h] [-b Image to duplicate] [-n New image name]";

while getopts "hb:n:" options; do
	case $options in
		b) VMBASELINE=`basename "$OPTARG"` ;;
		n)	name="$OPTARG";;
		h)	echo $USAGE; exit 0;;
	esac
done

ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_BLUE=$ESC_SEQ"34;01m"
COL_MAGENTA=$ESC_SEQ"35;01m"
COL_CYAN=$ESC_SEQ"36;01m"

echo -e $COL_GREEN"-=[ VMWare Image Duplicator ]=-"$COL_RESET

if [ ! -z $VMBASELINE ]
then
	echo -e $COL_YELLOW"VMBase Line:$COL_RESET '$VMBASELINE'"
fi

if [ ! -z $name ]
then
	echo -e $COL_YELLOW"New image name:$COL_RESET '$name'"
else
	echo -en $COL_CYAN"Enter new host name: "$COL_RESET
	while [ "$name" == '' ]
	do
		read name
	done
fi

echo
echo -e $COL_GREEN"-= Create new vmware server image =-"$COL_RESET

echo 
a="x"
while [ "Y" != "$a" ] && [ "y" != $a ] && [ "N" != $a ] && [ "n" != "$a" ]
do
	echo "Proceed [Y/n]"
	read a
done
if [ "n" == "$a" ] || [ "N" == "$a" ]
then
	echo  -e $COL_RED"Aborting"$COL_RESET
	exit 1
fi

echo -e $COL_CYAN"Copying files: "$COL_RESET
newroot="$VMWAREROOT/$name"
/bin/cp -rvp "$VMWAREROOT/$VMBASELINE" "$newroot"
echo -e $COL_CYAN"Done"$COL_RESET
echo

echo -e $COL_CYAN"Renaming files:"$COL_RESET
#vmware-vdiskmanager -n $newroot/$VMBASELINE.vmdk $newroot/$name.vmdk
for x in $newroot/*
do
	mv -v $x `echo $x|sed "s/$VMBASELINE/$name/g"`
done
echo -e $COL_CYAN"Done"$COL_RESET
echo

echo -en $COL_CYAN"Updating name in the vmx file: "$COL_RESET
vmx="$newroot/$name.vmx"
/bin/sed "s/$VMBASELINE/$name/g" "$vmx" > $vmx.1
mv $vmx.1 $vmx
echo -e $COL_CYAN"Done"$COL_RESET
echo

echo -en $COL_CYAN"Registering the new VM: "$COL_RESET
/usr/bin/vmware-vim-cmd solo/registervm $vmx $name
echo -e $COL_CYAN"Done"$COL_RESET
echo

echo -e $COL_GREEN"Setup complete"$COL_RESET
echo "You can now go to https://officedev:8333 and log in as root/long car and start"
echo "you new VM.  When you start the the VM you will be asked if you moved or"
echo "copied it.  You should choose the option 'I copied it'."
echo -e "I$COL_RED strongly recommend$COL_RESET that the first thing you do is change the hostname of the"
echo "VM. To do this edit the file /etc/hostname (and optional /etc/hosts)"


#echo -en $COL_CYAN"Starting VM: "$COL_RESET
#id=`/usr/bin/vmware-vim-cmd vmsvc/getallvms 2>&1 |grep $name|awk '{print $1}'`
#echo "Server ID = $id"
#if [ "$id" == '' ]
#then
	#echo "Unable to locate an id for the new VM.  You will need to start the VM via the"
	#echo "admin interface and connect using the console to check it's IP"
	#echo "address and manually set it's hostname"
	#exit 1
#fi
#/usr/bin/vmware-vim-cmd vmsvc/power.on $id

#echo -en $COL_CYAN"Waiting for VM to start: "$COL_RESET
#ip=""
#while [ "$ip" == "" ]
#do
	#for ((i=0;i<5;i+=1)); do
		#ip=`/usr/bin/vmware-vim-cmd "vmsvc/get.guest $id"|grep ipAddress|head -n 1|awk -F '"' '{print $2}'`
		#if [ "$ip"!="" ]
		#then
			#continue
		#fi
		#sleep 6
		#echo -n "."
	#done
	#echo
	#echo -n "Waited 30 seconds, server not responding.  Continue waiting? [Y/n] "
	#read response
	#if [ (( "$response"=="n" || "$response"=="N" )) ]
	#then
		#exit 1
	#fi
#done

#echo -en $COL_CYAN"Writing IP/Hostname $name to hosts file on VM as $ip: "$COL_RESET
#ssh root@$ip "echo $ip $name>>/etc/hosts"
#echo " Done"

#echo -en $COL_CYAN"Writing IP/Hostname $name to hosts file locally as $ip: "$COL_RESET
#echo "$ip $name">>/etc/hosts
#echo " Done"

