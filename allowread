#!/bin/bash

USAGE="`basename $0`[-u user] [-g group] [-d 750] [-f 640] [-p path]"

ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_BLUE=$ESC_SEQ"34;01m"
COL_MAGENTA=$ESC_SEQ"35;01m"
COL_CYAN=$ESC_SEQ"36;01m"

function help
{
    echo $USAGE
        cat <<EOF

This utility recursivly changes the permissions on a path and file to be 
readable (only) by the specified user and/or group.  It will change the 
ownership to the user and/or group specified by the command line flags.  This
script will probably need to run as either root or sudo to work as changing 
ownership is a privileged task.

Default behaviour is to set the directory ownership of all directories in the 
current path to the current user, leave the group ownership to be unchanged, and
set the dir umask to 550.  The path can be specified using the -p flag. If the 
last element in the path is a file then that file will get 440 permissions.  The
user to change ownership to can be specified using the -u flag.  If the -g flag 
is included and the -u flag not set then only the group will be set, if both the
-u and -u flags are set then both user and group will be set.

The umask used for directories and the file can be overriden using the -d and -f flags. 

  -u    The user to change ownership to
  -g    The group to change ownership to
  -d    The umask for directories
  -f    The umask for files
  -p    The path to affect the change on

EOF
    exit 1
}

dmask="750"
fmask="640"

while getopts "u:g:d:f:p:h" options; do
    case $options in
        u)  user="$OPTARG";;
        g)  group="$OPTARG";;
        d)  dmask="$OPTARG";;
        f)  fmask="$OPTARG";;
        p)  path="$OPTARG";;
        h)  help;;
    esac
done

if [ -z $user ] && [ ! -z $group ]
then
    only_set_group=1
elif [ -z $user ]
then
    user=`id -u -n`
fi

if [ -z $group ]
then
    do_not_set_group=1
fi

if [ -z $path ]
then
    path=`pwd`
fi

# echo "dmask=$dmask"
# echo "fmask=$fmask"
# echo "user=$user"
# echo "group=$group"
# echo "path=$path"
# echo "only_set_group=$only_set_group"
# echo "do_not_set_group=$do_not_set_group"
# echo

cwd=$path
while [ "$cwd" != "/" ]
do
    if [ -f $cwd ]
    then # set file
        mask=$fmask
    elif [ -d $cwd ]
    then # set dir
        mask=$dmask
    else # special file
        echo "$cwd is not a file or a directory, aborting"
        exit 2
    fi
    
    if [ $only_set_group ]
    then
        cmdchown="chgrp $group"
    elif [ $do_not_set_group ]
    then
        cmdchown="chown $user"
    else
        cmdchown="chown $user:$group"
    fi
    $cmdchown $cwd
    chmod $mask $cwd
    
    cwd=`dirname $cwd`
done
