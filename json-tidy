#!/usr/bin/php
<?php

if ($argc>1) {
    // discard first parameter, its the file name
    unset($argv[0]);
    foreach ($argv as $inputfile) {
        // format($inputfile);
        echo indent(file_get_contents($inputfile));
        echo "\n";
    }
} else {
    // read from stdio
    $inputfile = '';
    $in = fopen("php://stdin", "r");
    $line = null;
    while (($line = fgets($in)) != null) {
        $inputfile .= $line;
    }
    fclose($in);
    // format($inputfile);
    echo indent($inputfile);
    echo "\n";
}

function format($json) {
    var_dump(json_decode($json));
}

function indent($json) {
 
    $result    = '';
    $pos       = 0;
    $strLen    = strlen($json);
    $indentStr = '  ';
    $newLine   = "\n";
 
    for($i = 0; $i <= $strLen; $i++) {
        
        // Grab the next character in the string
        $char = substr($json, $i, 1);
        
        // If this character is the end of an element, 
        // output a new line and indent the next line
        if($char == '}' || $char == ']') {
            $result .= $newLine;
            $pos --;
            for ($j=0; $j<$pos; $j++) {
                $result .= $indentStr;
            }
        }
        
        // Add the character to the result string
        $result .= $char;
 
        // If the last character was the beginning of an element, 
        // output a new line and indent the next line
        if ($char == ',' || $char == '{' || $char == '[') {
            $result .= $newLine;
            if ($char == '{' || $char == '[') {
                $pos ++;
            }
            for ($j = 0; $j < $pos; $j++) {
                $result .= $indentStr;
            }
        }
    }
 
    return $result;
}
