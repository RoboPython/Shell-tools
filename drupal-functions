function getRemotePath {
    export RPATH=`ssh $RUSER@$RHOST realpath /var/www/testing`
    export CURRENT=`basename $RPATH`
}

function getVersionElements {
    export BRAND=`echo $1|awk '{split($0,a,"_"); print a[1]}'`
    export NOBC=`echo $1|awk '{split($0,a,"_"); print a[2]}'`
    if [ "$BRAND" == "$1" ]; then
        NOBC=$BRAND
        unset BRAND
    fi
    export MAJOR_VERSION=`echo $NOBC|awk '{split($0,a,"."); print a[1]}'`
    export MINOR_VERSION=`echo $NOBC|awk '{split($0,a,"."); print a[2]}'`
    export PATCH_VERSION=`echo $NOBC|awk '{split($0,a,"."); print a[3]}'`
}

function aliasname {
    aliasname=$(echo $1 | awk -F '.' '{print $1}')
    isnumeric=$(echo $aliasname | grep "[^0-9]")
    if [ -z "$isnumeric" ]; then
      # The first element is a numer, it's probably an IP
      echo $1
    else
      echo $aliasname
    fi
}

function debug {
    if [ ! -z "$VERBOSE" ]; then
        echo -e $1
    fi
}

function bumpUp {
    MAJOR_VERSION=$1
    MINOR_VERSION=$2
    PATCH_VERSION=$3
    BUMP=$4

    until [ "$BUMP" == "patch" ] || [ "$BUMP" == "minor" ] || [ "$BUMP" == "major" ]; do
        echo -e "Current version on remote site: ${COL_GREEN}${CURRENT}${COL_RESET}"
        echo -n "Bump which version Major|mInor|Patch? [m/i/P]? "
        read a
        case $a in
            M) BUMP=major;;
            m) BUMP=major;;
            I) BUMP=minor;;
            i) BUMP=minor;;
            P) BUMP=patch;;
            p) BUMP=patch;;
        esac
    done
    
    case $BUMP in
        patch) PATCH_VERSION=$(($PATCH_VERSION + 1));;
        minor) MINOR_VERSION=$(($MINOR_VERSION + 1)); PATCH_VERSION=0;;
        major) MAJOR_VERSION=$(($MAJOR_VERSION + 1)); MINOR_VERSION=0; PATCH_VERSION=0;;
    esac            

    export PATCH_VERSION
    export MINOR_VERSION
    export MAJOR_VERSION
}

# vim: filetype=sh:ts=4:sw=4:expandtab
